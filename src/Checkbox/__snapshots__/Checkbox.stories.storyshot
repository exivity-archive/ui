// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots interact|Checkbox default 1`] = `
.c0 {
  padding: 12px;
}

.c3 {
  font-family: 'Fira Sans',sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #222;
  line-height: 1.5;
}

.c3 > .c2 {
  display: block;
  font-size: 0.8125em;
  color: #999;
}

.c1 {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.c1 + label {
  position: relative;
  display: inline-block;
  padding: 0 0 0 2em;
  cursor: pointer;
  line-height: 1em;
  height: 1em;
}

.c1 + label:empty {
  padding: 0 0 0 1em;
}

.c1 + label::before,
.c1 + label::after {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 1em;
  height: 1em;
  -webkit-transition: .25s all ease;
  transition: .25s all ease;
}

.c1 + label::before {
  content: " ";
  border-radius: 4px;
  background-color: #eee;
}

.c1 + label::after {
  content: "\\2714";
  color: #2c3e50;
  line-height: 1.1em;
  text-align: center;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.c1:checked + label::after {
  -webkit-transform: scale(0.9);
  -ms-transform: scale(0.9);
  transform: scale(0.9);
}

<div
  className="c0"
>
  <span>
    <input
      checked={true}
      className="c1"
      id="0"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="c2 c3"
      htmlFor="0"
    >
      
    </label>
  </span>
</div>
`;

exports[`Storyshots interact|Checkbox with custom label 1`] = `
.c0 {
  padding: 12px;
}

.c2 {
  font-family: 'Fira Sans',sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #222;
  line-height: 1.5;
  margin: 1.25rem 0;
}

.c2:first-child {
  margin-top: 0;
}

.c2:last-child {
  margin-bottom: 0;
}

.c2,
input.c2 {
  font-size: 1.5em;
}

.c2 .c3 {
  margin-right: 1.25em;
  display: inline-block;
  -webkit-transform: scale(1.5);
  -ms-transform: scale(1.5);
  transform: scale(1.5);
  -webkit-transform-origin: left 25%;
  -ms-transform-origin: left 25%;
  transform-origin: left 25%;
}

.c1 {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.c1 + label {
  position: relative;
  display: inline-block;
  padding: 0 0 0 2em;
  cursor: pointer;
  line-height: 1em;
  height: 1em;
}

.c1 + label:empty {
  padding: 0 0 0 1em;
}

.c1 + label::before,
.c1 + label::after {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 1em;
  height: 1em;
  -webkit-transition: .25s all ease;
  transition: .25s all ease;
}

.c1 + label::before {
  content: " ";
  border-radius: 4px;
  background-color: #eee;
}

.c1 + label::after {
  content: "\\2714";
  color: #2c3e50;
  line-height: 1.1em;
  text-align: center;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.c1:checked + label::after {
  -webkit-transform: scale(0.9);
  -ms-transform: scale(0.9);
  transform: scale(0.9);
}

<div
  className="c0"
>
  <span>
    <input
      checked={true}
      className="c1"
      id="2"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="c2"
      htmlFor="2"
      style={
        Object {
          "marginTop": 0,
        }
      }
      type="header"
    >
      Enable this setting
    </label>
  </span>
</div>
`;

exports[`Storyshots interact|Checkbox with label 1`] = `
.c0 {
  padding: 12px;
}

.c3 {
  font-family: 'Fira Sans',sans-serif;
  font-weight: normal;
  font-size: 16px;
  color: #222;
  line-height: 1.5;
}

.c3 > .c2 {
  display: block;
  font-size: 0.8125em;
  color: #999;
}

.c1 {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.c1 + label {
  position: relative;
  display: inline-block;
  padding: 0 0 0 2em;
  cursor: pointer;
  line-height: 1em;
  height: 1em;
}

.c1 + label:empty {
  padding: 0 0 0 1em;
}

.c1 + label::before,
.c1 + label::after {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 1em;
  height: 1em;
  -webkit-transition: .25s all ease;
  transition: .25s all ease;
}

.c1 + label::before {
  content: " ";
  border-radius: 4px;
  background-color: #eee;
}

.c1 + label::after {
  content: "\\2714";
  color: #2c3e50;
  line-height: 1.1em;
  text-align: center;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.c1:checked + label::after {
  -webkit-transform: scale(0.9);
  -ms-transform: scale(0.9);
  transform: scale(0.9);
}

<div
  className="c0"
>
  <span>
    <input
      checked={true}
      className="c1"
      id="1"
      onChange={[Function]}
      type="checkbox"
    />
    <label
      className="c2 c3"
      htmlFor="1"
    >
      Enable this setting
    </label>
  </span>
</div>
`;
