{"version":3,"file":"static/iframe.98120bacfcb15f9a14f9.bundle.js","sources":["webpack:///./src/theme/theme.js"],"sourcesContent":["import { css } from 'reakit'\nimport { withProp, ifProp, ifNotProp, palette as p, prop, theme as t } from 'styled-tools'\n\nimport { utils } from '../theme'\n\nconst BASE_SIZE = 16\n\n// Stuck in a loop while importing this function from utils\nexport const preciseRm = (fraction, size = BASE_SIZE) => {\n  const rounded = Math.round(size * fraction)\n\n  return rounded / size\n}\n\nexport const base = {\n  space: `${preciseRm(1)}em`,\n  spaceHalf: `${preciseRm(0.5)}em`,\n  spaceDouble: `${preciseRm(2)}em`,\n  borderRadius: '4px',\n  borderWidth: '1px',\n  outlineWidth: '4px'\n}\n\nexport const type = {\n  size: BASE_SIZE,\n  lineHeight: 1.5,\n  fonts: {\n    config: {\n      custom: {\n        families: [],\n        urls: [\n          // Optional\n          // 'font/stylesheet.css'\n        ]\n      },\n      google: {\n        families: [\n          'Fira Mono:400',\n          'Fira Sans Condensed:300,500',\n          'Fira Sans:400,600'\n        ]\n      }\n    },\n    base: {\n      family: '\\'Fira Sans\\', sans-serif',\n      weight: 400,\n      weightBold: 600\n    },\n    interact: {\n      family: '\\'Fira Sans Condensed\\', sans-serif',\n      weight: 300,\n      weightBold: 500\n    },\n    monospace: {\n      family: '\\'Fira Mono\\', monospace',\n      weight: 400\n    }\n  }\n}\n\nexport const scale = {\n  xsmall: 0.6,\n  small: 0.8,\n  large: 1.2,\n  xlarge: 1.4\n}\n\nexport const palette = {\n  white: '#ffffff',\n  whiteText: p('black'),\n\n  black: '#212121',\n  blackText: p('white'),\n\n  // https://coolors.co/2196f3-42a5f5-64b5f6-90caf9-bbdefb\n  primary: ['#2196f3', '#42a5f5', '#64b5f6', '#90caf9', '#bbdefb'],\n  primaryText: [p('white'), p('white'), p('black'), p('black'), p('black')],\n\n  // https://coolors.co/8e8e8e-acacac-b7b7b7-cbcbcb-e0e0e0\n  secondary: ['#8E8E8E', '#acacac', '#b7b7b7', '#cbcbcb', '#e0e0e0'],\n  secondaryText: [p('white'), p('white'), p('black'), p('black'), p('black')],\n\n  // https://coolors.co/f44336-ef5350-e57373-ef9a9a-ffcdd2\n  danger: ['#f44336', '#ef5350', '#e57373', '#ef9a9a', '#ffcdd2'],\n  dangerText: [p('white'), p('white'), p('black'), p('black'), p('black')],\n\n  // https://coolors.co/ffc107-ffca28-ffd54f-ffe082-ffecb3\n  warning: ['#ffc107', '#ffca28', '#ffd54f', '#ffe082', '#ffecb3'],\n  warningText: [p('black'), p('black'), p('black'), p('black'), p('black')],\n\n  // https://coolors.co/4caf50-66bb6a-81c784-a5d6a7-c8e6c9\n  success: ['#4caf50', '#66bb6a', '#81c784', '#a5d6a7', '#c8e6c9'],\n  successText: [p('white'), p('white'), p('white'), p('black'), p('black')],\n\n  grayscale: [\n    p('black'),\n    '#414141',\n    '#616161',\n    '#9e9e9e',\n    '#bdbdbd',\n    '#e0e0e0',\n    '#f5f5f5',\n    p('white')\n  ],\n  grayscaleText: [\n    p('white'),\n    p('white'),\n    p('white'),\n    p('black'),\n    p('black'),\n    p('black'),\n    p('black'),\n    p('black')\n  ],\n\n  background: [\n    p('grayscale', -4),\n    p('grayscale', -3),\n    p('grayscale', -2),\n    p('grayscale', -1)\n  ],\n  backgroundText: p('black'),\n\n  shadow: [\n    'rgba(0, 0, 0, 0.9)',\n    'rgba(0, 0, 0, 0.7)',\n    'rgba(0, 0, 0, 0.5)',\n    'rgba(0, 0, 0, 0.3)',\n    'rgba(0, 0, 0, 0.15)',\n    'rgba(0, 0, 0, 0.075)'\n  ],\n  shadowText: [\n    p('white'),\n    p('white'),\n    p('white'),\n    p('black'),\n    p('black'),\n    p('black')\n  ],\n\n  transparent: 'transparent',\n  transparentText: p('black'),\n\n  border: p('shadow', -2),\n\n  marker: '#fdf6e3'\n}\n\nexport const Avatar = css`\n  border-radius: 50%;\n  width: 1.5em;\n  height: 1.5em;\n  overflow: hidden;\n  object-fit: cover;\n`\n\nexport const Blockquote = css`\n  border-left: 5px solid ${p('grayscale', -3)};\n  padding: 0.5em 0 0.5em 1em;\n  font-style: italic;\n`\n\nexport const Box = css`\n  font-size: ${t('type.size')}px;\n  font-family: ${t('type.fonts.base.family')};\n  font-weight: ${t('theme.type.fonts.base.weight')};\n  line-height: ${t('type.lineHeight')};\n  --focus-color: ${utils.toCssRgbComponent(utils.bgColorWithProps)};\n`\n\nexport const Button = css`\n  font-family: ${t('type.fonts.interact.family')};\n  font-weight: ${t('type.fonts.interact.weightBold')};\n  font-size: ${prop('scale')}em;\n  text-transform: uppercase;\n  display: inline-flex;\n  position: relative;\n  appearance: none;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  min-width: 2.5em;\n  height: 2.5em;\n  padding: 0 ${preciseRm(1.2)}em;\n  border: none;\n  border-radius: ${t('base.borderRadius')};\n  flex: none;\n  user-select: none;\n  white-space: nowrap;\n  text-decoration: none;\n  outline: none;\n  \n  &:hover {\n    box-shadow: inset 10px 10px 999em ${p('shadow', -2)};\n  }\n  \n  &:focus {\n    box-shadow: inset 0 0 999em ${p('shadow', -2)},\n      0 0 0 ${base.outlineWidth} rgba(var(--focus-color), 0.3);\n  }\n  \n  &:active,\n  &.active {\n    box-shadow: inset 0 0 999em ${p('shadow', -3)},\n      0 0 0 ${base.outlineWidth} rgba(var(--focus-color), 0.3);\n  }\n  \n  &:after {\n    display: none;\n    content: \"\";\n    position: absolute;\n    top: -${base.borderWidth};\n    right: -${base.borderWidth};\n    bottom: -${base.borderWidth};\n    left: -${base.borderWidth};\n    border-radius: inherit;\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  \n  &[disabled] {\n    pointer-events: none;\n    &:after {\n      display: block;\n    }\n  }\n  \n  ${props => props.outlined && css`\n    background-color: ${p('white')};\n    color: ${p(props.palette, 0)};\n    box-shadow: 0 0 0 ${base.borderWidth} ${utils.bgColorWithProps};\n    \n    &:hover {\n      color: ${p('whiteText')};\n      box-shadow: 0 0 0 ${base.borderWidth} ${p('grayscale', props.tone)};\n    }\n    \n    &:focus {\n      box-shadow: 0 0 0 ${base.borderWidth} ${utils.bgColorWithProps},\n       0 0 0 ${parseInt(base.outlineWidth, 10) + 1}px rgba(var(--focus-color), 0.3);\n    }\n  `}\n`\n\nexport const Code = css`\n  font-family: ${t('type.fonts.monospace.family')};\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  padding: ${ifProp('block', '0', '0.25em 0.35em')};\n  background-color: ${p('marker')};\n  border-radius: 0.25em;\n\n  code {\n    display: block;\n    padding: 1em;\n  }\n`\n\nexport const Field = css`\n  display: flex;\n  flex-direction: ${ifProp('horizontal', 'row', 'column')};\n  align-items: ${ifProp('horizontal', 'center', 'unset')};\n  flex: 1;\n  white-space: ${ifProp('nowrap', 'nowrap', 'unset')};\n  \n  &:not(:last-child) {\n    margin-bottom: ${t('base.spaceDouble')};\n  }\n  \n  label {\n    padding-bottom: ${ifNotProp('horizontal', t('base.spaceHalf'), 'unset')};\n    margin-right: ${ifProp('horizontal', t('base.spaceDouble'), 'unset')};\n    flex-basis: ${withProp(['horizontal', 'align'], (horizontal, align) => {\n    return (horizontal && align)\n      ? (align === true) ? `${preciseRm(20)}em` : align\n      : 'auto'\n  })};\n    \n    > label {\n      padding-bottom: unset;\n    }\n  }\n  \n  ${ifNotProp('horizontal', css`\n    > *:not(label):not(:last-child) {\n      margin-bottom: ${t('base.spaceDouble')};\n    }\n  `)}\n`\n\nexport const GroupItem = css`\n  border: ${base.borderWidth} solid ${p('border')};\n  border-radius: 0.25em;\n`\n\nexport const Heading = css`\n  font-weight: ${t('type.fonts.base.weight')};\n  margin: 1em 0 0.5em;\n  &:first-child {\n    margin-top: 0;\n  }\n  h1& {\n    font-size: 2.5em;\n  }\n  h2& {\n    font-size: 2em;\n  }\n  h3& {\n    font-size: 1.75em;\n  }\n  h4& {\n    font-size: 1.5em;\n  }\n  h5& {\n    font-size: 1.25em;\n  }\n  h6& {\n    font-size: 1em;\n  }\n`\n\nexport const Icon = css`\n  font-size: ${prop('scale')}em;\n  height: 1em;\n  line-height: 1em;\n  text-transform: none;\n`\n\nexport const Image = css`\n  display: block;\n  max-width: 100%;\n`\n\nexport const Input = css`\n  font-size: ${prop('scale')}em;\n  display: block;\n  width: 100%;\n  padding: 0 0.5em;\n  height: 2.5em;\n  border-radius: ${t('base.borderRadius')};\n  outline: none;\n    \n  ${props => props.outlined && css`\n    border: ${base.borderWidth} solid ${p(props.palette, props.tone)};\n  `}\n  \n  ${props => props.palette === 'grayscale' && css`\n    border-color: ${p('grayscale', (props.tone || 0) - 3)};\n    ${props.opaque && css`\n      background-color: ${p('grayscale', (props.tone || 0) - 3)};\n      color: ${p('grayscaleText', (props.tone || 0) - 3)};\n    `}\n  `}\n  \n  --focus-color: ${props => {\n    if (props.palette === 'grayscale') return utils.toCssRgbComponent(palette.primary[0])\n    return props.opaque\n      ? utils.toCssRgbComponent(utils.bgColorWithProps)\n      : utils.toCssRgbComponent(utils.textColorWithProps)\n  }};\n  \n  &:focus {\n    box-shadow: 0 0 0 ${base.outlineWidth} rgba(var(--focus-color), 0.3);\n  }\n\n  &[type=\"checkbox\"],\n  &[type=\"radio\"] {\n    display: inline-block;\n    width: auto;\n    height: auto;\n    padding: 0;\n  }\n\n  &::placeholder {\n    color: currentcolor;\n    opacity: 0.5;\n  }\n\n  textarea & {\n    padding: 0.5em;\n    height: auto;\n  }\n  \n  &[disabled] {\n    cursor: not-allowed;\n    box-shadow: inset 0 0 999em rgba(128, 128, 128, 0.2);\n  }\n`\n\nconst secondaryLabel = css`\n  display: block;\n  font-size: ${preciseRm(0.9)}em;\n  color: ${p('grayscale', 3)};\n`\nexport const Label = css`\n  ${ifProp('secondary', secondaryLabel)}\n  \n  & > & {\n    ${secondaryLabel}\n  }\n`\n\nexport const Link = css`\n  display: inline-grid;\n  grid-gap: 0.25em;\n  align-items: center;\n  grid-auto-flow: column;\n  text-decoration: none;\n\n  --focus-color: ${utils.toCssRgbComponent(utils.textColorWithProps)};\n\n  &:focus {\n    outline: none;\n    border-radius: 1px;\n    background-color: rgba(var(--focus-color), 0.3);\n    box-shadow: 0 0 0 ${base.outlineWidth} rgba(var(--focus-color), 0.3);\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const List = css`\n  ${props => {\n    if (props.ordered) {\n      return css`\n        padding-left: ${t('base.spaceDouble')};\n        list-style: decimal;`\n    }\n    if (props.unordered) {\n      return css`\n        padding-left: ${t('base.spaceDouble')};\n        list-style: disc;`\n    }\n\n    return css`list-style: none;`\n  }}\n\n  &:not(:last-child) {\n    margin-bottom: ${t('base.space')};\n  }\n\n  li {\n    margin-bottom: 0.35em;\n  }\n`\n\nexport const Navigation = css`\n  \n`\n\nexport const NavigationItem = css`\n  \n`\n\nexport const Overlay = css`\n  padding: 1em;\n  border-radius: 0.25em;\n  box-shadow: 0 0 0 1px ${p('shadow', -2)}, 0 4px 8px ${p('shadow', -2)},\n    0 16px 48px ${p('shadow', -2)};\n`\n\nexport const Paragraph = css`\n  &:not(:last-child) {\n    margin-bottom: ${t('base.space')};\n  }\n`\n\nexport const Popover = css`\n  padding: 1em;\n  border-radius: 0.25em;\n  box-shadow: 0 0 0 1px ${p('shadow', -2)}, 0 2px 4px ${p('shadow', -1)},\n    0 8px 24px ${p('shadow', -1)};\n\n  &[aria-hidden=\"false\"] {\n    transition-timing-function: ${prop(\n    'timing',\n    'cubic-bezier(0.25, 0.1, 0.25, 1.5)'\n  )};\n  }\n`\n\nexport const PopoverArrow = css`\n  & .stroke {\n    fill: ${p('shadow', -2)};\n  }\n`\n\nexport const Sidebar = css`\n  border-radius: 0;\n`\n\nexport const Table = css`\n  font-size: ${prop('scale')}em;\n  table-layout: fixed;\n  border-collapse: collapse;\n  line-height: 200%;\n\n  tbody,\n  td,\n  th,\n  tfoot,\n  thead,\n  tr {\n\n  }\n\n  thead tr,\n  tbody tr:not(:last-child) {\n    border-bottom: 1px solid ${p('grayscale', -3)};\n  }\n\n  tfoot tr {\n    border-top: 1px solid ${p('grayscale', -3)};\n  }\n\n  caption {\n    text-transform: uppercase;\n    font-size: ${preciseRm(0.9)}em;\n    color: ${p('grayscale', 3)};\n  }\n\n  td,\n  th {\n    padding: ${ifProp('compact', preciseRm(0), preciseRm(0.2))}em 0;\n    vertical-align: middle;\n\n    &:not(:first-child) {\n      padding-left: ${ifProp('compact', preciseRm(0.1), preciseRm(0.4))}em;\n    }\n\n    &:not(:last-child) {\n      padding-right: ${ifProp('compact', preciseRm(0.1), preciseRm(0.4))}em;\n    }\n  }\n\n  th {\n    font-weight: ${t('type.fonts.base.weightBold')};\n    text-align: left;\n  }\n`\n\nexport const Tabs = css`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  border-bottom: ${t('base.borderWidth')} solid ${p('grayscale', -3)};\n  \n  li {\n    --focus-color: ${utils.toCssRgbComponent(utils.textColorWithProps)};\n  }\n`\n\nexport const TabsTab = css`\n  display: inline-flex;\n  position: relative;\n  user-select: none;\n  cursor: pointer;\n  outline: none;\n  align-items: center;\n  white-space: nowrap;\n  justify-content: center;\n  text-decoration: none;\n  height: 2.5em;\n  padding: 0;\n  min-width: 2.5em;\n  border-bottom: 5px solid transparent;\n\n  ${ifProp('palette', css`--focus-color: ${utils.toCssRgbComponent(utils.textColorWithProps)} !important;`)}\n  \n  &:not(:last-child) {\n    margin-right: ${t('base.spaceDouble')};\n  }\n  \n  &.active {\n    font-weight: bold;\n    border-bottom: 5px solid rgba(var(--focus-color), 0.15);\n  }\n  \n  &.active:focus {\n    border-bottom: 5px solid rgba(var(--focus-color), 1);\n  }\n  \n  &[disabled] {\n    pointer-events: none;\n  }\n`\n\nexport const TabsPanel = css`\n  margin-top: ${t('base.space')};\n`\n\nexport const Tooltip = css`\n  text-transform: none;\n  pointer-events: none;\n  white-space: nowrap;\n  font-size: 0.875em;\n  text-align: center;\n  box-shadow: none;\n  border-radius: 0.25em;\n  padding: 0.75em 1em;\n`\n\nexport const TooltipArrow = css`\n  & .stroke {\n    fill: none;\n  }\n`\n\nexport default {\n  base,\n  type,\n  scale,\n  palette,\n  Avatar,\n  Blockquote,\n  Box,\n  Button,\n  Code,\n  Field,\n  GroupItem,\n  Heading,\n  Icon,\n  Image,\n  Input,\n  Label,\n  Link,\n  List,\n  Navigation,\n  NavigationItem,\n  Overlay,\n  Paragraph,\n  Popover,\n  PopoverArrow,\n  Sidebar,\n  Table,\n  Tabs,\n  TabsTab,\n  TabsPanel,\n  Tooltip,\n  TooltipArrow\n}\n"],"mappings":"AAAA","sourceRoot":""}